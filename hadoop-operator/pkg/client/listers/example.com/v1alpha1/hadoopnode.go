// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/tangfeixiong/go-to-kubernetes/hadoop-operator/pkg/apis/example.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HadoopNodeLister helps list HadoopNodes.
type HadoopNodeLister interface {
	// List lists all HadoopNodes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.HadoopNode, err error)
	// HadoopNodes returns an object that can list and get HadoopNodes.
	HadoopNodes(namespace string) HadoopNodeNamespaceLister
	HadoopNodeListerExpansion
}

// hadoopNodeLister implements the HadoopNodeLister interface.
type hadoopNodeLister struct {
	indexer cache.Indexer
}

// NewHadoopNodeLister returns a new HadoopNodeLister.
func NewHadoopNodeLister(indexer cache.Indexer) HadoopNodeLister {
	return &hadoopNodeLister{indexer: indexer}
}

// List lists all HadoopNodes in the indexer.
func (s *hadoopNodeLister) List(selector labels.Selector) (ret []*v1alpha1.HadoopNode, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HadoopNode))
	})
	return ret, err
}

// HadoopNodes returns an object that can list and get HadoopNodes.
func (s *hadoopNodeLister) HadoopNodes(namespace string) HadoopNodeNamespaceLister {
	return hadoopNodeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HadoopNodeNamespaceLister helps list and get HadoopNodes.
type HadoopNodeNamespaceLister interface {
	// List lists all HadoopNodes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.HadoopNode, err error)
	// Get retrieves the HadoopNode from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.HadoopNode, error)
	HadoopNodeNamespaceListerExpansion
}

// hadoopNodeNamespaceLister implements the HadoopNodeNamespaceLister
// interface.
type hadoopNodeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HadoopNodes in the indexer for a given namespace.
func (s hadoopNodeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HadoopNode, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HadoopNode))
	})
	return ret, err
}

// Get retrieves the HadoopNode from the indexer for a given namespace and name.
func (s hadoopNodeNamespaceLister) Get(name string) (*v1alpha1.HadoopNode, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hadoopnode"), name)
	}
	return obj.(*v1alpha1.HadoopNode), nil
}
