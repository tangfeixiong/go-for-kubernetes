apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  labels:
    app: hadoop
    example.com/hadoop-operator: {{.CustomResourceName }} # required by operator itself!
    github.com/go-to-kubernetes: hadoop-operator
  name: {{.Name }} # e.g. demo-hadoop-namenode
  #namespace: {{.Namespace}}
spec:
  podManagementPolicy: OrderedReady
  #podManagementPolicy: Parallel
  replicas: {{.Count}}
  selector:
    matchLabels:
      app: hadoop
      example.com/hadoop-operator: {{.CustomResourceName}} # required by operator itself!
      github.com/go-to-kubernetes: hadoop-operator
  serviceName: {{.ServiceName}} # e.g. demo-hadoop-galera
  template:
    metadata:
      labels:
        app: hadoop
        app-affinity: local-test-affinity
        example.com/hadoop-operator: {{.CustomResourceName}} # required by operator itself!
        github.com/go-to-kubernetes: hadoop-operator
        hadoop-operator: {{.Name}} # required by operator itself!
        node-type: {{.HdfsNodeType}}
    spec:
      #affinity:
      #  podAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #    - labelSelector:
      #        matchExpressions:
      #        - key: app-affinity
      #          operator: In
      #          values:
      #          - local-test-affinity
      #      topologyKey: kubernetes.io/hostname
      #affinity:
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #    - labelSelector:
      #        matchExpressions:
      #        - key: app-affinity
      #          operator: In
      #          values:
      #          - local-test-anti-affinity
      #      topologyKey: kubernetes.io/hostname
      containers:
      - args:
        #- {{.HdfsNodeType}}
        command:
        #- /hadoop-3.0.0/bin/hdfs
        - /operator-entrypoint/hadoop-startup.sh
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: docker.io/tangfeixiong/hadoop
        #imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        #livenessProbe:
        #  exec:
        #    command:
        #    - /hadoop-3.0.0/bin/hadoop
        #    - status
        #  failureThreshold: 6
        #  initialDelaySeconds: 30
        #  periodSeconds: 10
        #  successThreshold: 1
        #  timeoutSeconds: 10
        name: hadoop
        ports:
        - containerPort: 9000
          name: hdfs
          protocol: TCP
        ports:
        - containerPort: 9870
          name: nnhttp
          protocol: TCP
        ports:
        - containerPort: 9868
          name: snnhttp
          protocol: TCP
        ports:
        - containerPort: 9867
          name: dnipc
          protocol: TCP
        ports:
        - containerPort: 9864
          name: dnhttp
          protocol: TCP
        #readinessProbe:
        #  exec:
        #    command:
        #    - /hadoop-3.0.0/bin/hadoop
        #    - status
        #  failureThreshold: 3
        #  initialDelaySeconds: 10
        #  periodSeconds: 3
        #  successThreshold: 1
        #  timeoutSeconds: 10
        resources: {}
        securityContext: {}
        #serviceAccountName: hadoop
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /hadoop-3.0.0/etc/hadoop
          name: hadoopetc
        - mountPath: /operator-entrypoint
          name: operatorentry
        - mountPath: /tmp/hadoop-root
          #name: local-vol
          name: hostpath
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - --hadoop_dir=/hadoop-3.0.0
        {{with .HdfsClusterID}}- --hdfs_cluster_id={{.}}{{end}}
        - --hdfs_node_type={{.HdfsNodeType}}
        - --logtostderr
        - --v=5
        command:
        - /hadoop-operator
        - init
        env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME  # important, required to discover StatefulSet name by operator itself!
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        #- name: MY_POD_SERVICE_ACCOUNT
        #  valueFrom:
        #    fieldRef:
        #      fieldPath: spec.serviceAccountName
        image: docker.io/tangfeixiong/hadoop-agent
        #imagePullPolicy: IfNotPresent
        imagePullPolicy: Always
        name: agent
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /operator-entrypoint
          name: operatorentry
        - mountPath: /tmp/hadoop-root
          #name: local-vol
          name: hostpath
        - mountPath: /tmp/podinfo
          name: podinfo
      #restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      #securityContext:
      #  fsGroup: 1234
      #serviceAccountName: hadoop
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: {{.CustomResourceName}}--{{.Name}}
          items:
          - key: core-site.xml  # .$(MY_NODE_NAME)
            path: core-site.xml
          - key: hdfs-site.xml
            path: hdfs-site.xml
          - key: yarn-site.xml
            path: yarn-site.xml
          - key: mapred-site.xml
            path: mapred-site.xml
        name: hadoopetc
      - downwardAPI:
          defaultMode: 420
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations
            path: annotations
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels
            path: labels
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
            path: name
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
        name: podinfo
      - emptyDir: {}
        name: operatorentry
  updateStrategy:
    #type: RollingUpdate
    type: OnDelete
  volumeClaimTemplates:
  #- metadata:
  #    name: local-vol
  #  spec:
  #    accessModes: [ "ReadWriteOnce" ]
  #    storageClassName: "local-storage"
  #    resources:
  #      requests:
  #        storage: 100Mi
  - metadata:
      name: hostpath
      #annotations:
      #  volume.beta.kubernetes.io/storage-class: "example-hostpath"
    spec:
      accessModes:
        - ReadWriteOnce
        #- ReadOnlyMany
        #- ReadWriteMany
      storageClassName: "example-hostpath"
      resources:
        requests:
          storage: 80Mi
    