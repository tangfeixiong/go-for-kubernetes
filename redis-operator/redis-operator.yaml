apiVersion: v1
kind: Namespace
metadata:
  name: example-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: redis-operator-example
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  - secrets
  - pods
  - services
  - nodes
  - nodes/proxy
  - configmaps
  - events
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
  - delete
- apiGroups:
  - extensions
  resources:
  - thirdpartyresources
  - deployments
  - daemonsets
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - operator.joelws.com
  resources:
  - "*"
  verbs:
  - "*"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-operator
  namespace: example-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: redis-operator
  namespace: example-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  # name: redis-operator-example
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: redis-operator
  namespace: example-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: redis-operator
  name: redis-operator
  namespace: example-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-operator
    spec:
      serviceAccountName: redis-operator
      containers:
      - image: tangfeixiong/redis-operator:latest
        #imagePullPolicy: Never
        name: redis-operator
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        ports:
        - containerPort: 10002
          name: http-port
        - containerPort: 10001
          name: tcp-port
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis-operator
  name: redis-operator
  namespace: example-system
spec:
  clusterIP: None
  ports:
    - port: 10002
  selector:
    app: redis-operator
