// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pb/fake.proto

package pb

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FakeMessage struct {
	I string `protobuf:"bytes,1,opt,name=i,proto3" json:"i,omitempty"`
	S int32  `protobuf:"varint,2,opt,name=s,proto3" json:"s,omitempty"`
	B []byte `protobuf:"bytes,3,opt,name=b,proto3" json:"b,omitempty"`
}

func (m *FakeMessage) Reset()                    { *m = FakeMessage{} }
func (m *FakeMessage) String() string            { return proto.CompactTextString(m) }
func (*FakeMessage) ProtoMessage()               {}
func (*FakeMessage) Descriptor() ([]byte, []int) { return fileDescriptorFake, []int{0} }

func (m *FakeMessage) GetI() string {
	if m != nil {
		return m.I
	}
	return ""
}

func (m *FakeMessage) GetS() int32 {
	if m != nil {
		return m.S
	}
	return 0
}

func (m *FakeMessage) GetB() []byte {
	if m != nil {
		return m.B
	}
	return nil
}

func init() {
	proto.RegisterType((*FakeMessage)(nil), "pb.FakeMessage")
}

func init() { proto.RegisterFile("pb/fake.proto", fileDescriptorFake) }

var fileDescriptorFake = []byte{
	// 101 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x48, 0xd2, 0x4f,
	0x4b, 0xcc, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x32, 0xe7,
	0xe2, 0x76, 0x4b, 0xcc, 0x4e, 0xf5, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0xe2, 0xe1, 0x62,
	0xcc, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xcc, 0x04, 0xf1, 0x8a, 0x25, 0x98, 0x14,
	0x18, 0x35, 0x58, 0x83, 0x18, 0x8b, 0x41, 0xbc, 0x24, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x9e, 0x20,
	0xc6, 0xa4, 0x24, 0x36, 0xb0, 0x19, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x87, 0x5d, 0xb7,
	0x27, 0x54, 0x00, 0x00, 0x00,
}
